/**
 * @swagger
 * components:
 *   schemas:
 *     DeviceToken:
 *       type: object
 *       description: Represents a device token used for push notifications, linked to a user.
 *       required:
 *         - id
 *         - user_id
 *         - device_token
 *         - device_type
 *       properties:
 *         id:
 *           type: string
 *           format: uuid
 *           description: Unique identifier for the device token record (UUIDv4).
 *           example: "550e8400-e29b-41d4-a716-446655440000"
 *         user_id:
 *           type: string
 *           format: uuid
 *           description: UUID of the user this device token belongs to.
 *           example: "a1234567-e29b-41d4-a716-446655440000"
 *         device_token:
 *           type: string
 *           description: The device token string used for push notifications.
 *           example: "fcm_device_token_1234567890abcdef"
 *         device_type:
 *           type: string
 *           enum: [ios, android, web]
 *           description: Type of device associated with the token.
 *           example: "android"
 *         is_active:
 *           type: boolean
 *           description: Indicates if the device token is active.
 *           default: true
 *           example: true
 *         created_at:
 *           type: string
 *           format: date-time
 *           description: Timestamp when the device token record was created.
 *           readOnly: true
 *           example: "2023-01-01T12:00:00Z"
 *         updated_at:
 *           type: string
 *           format: date-time
 *           description: Timestamp when the device token record was last updated.
 *           readOnly: true
 *           example: "2023-01-02T15:00:00Z"
 * 
 *   parameters:
 *     deviceTokenId:
 *       in: path
 *       name: id
 *       required: true
 *       schema:
 *         type: string
 *         format: uuid
 *       description: UUID of the device token.
 *       example: "550e8400-e29b-41d4-a716-446655440000"
 */



/**
 * @swagger
 * tags:
 *   - name: DeviceToken
 *     description: APIs to manage device tokens for push notifications
 *
 * /device-token/create:
 *   post:
 *     tags:
 *       - DeviceToken
 *     summary: Register or update a device token for push notifications
 *     description: >
 *       Registers a new device token or updates an existing one for a user.<br/>
 *       This token will be used to send push notifications to the user's device.<br/>
 *       If the token already exists, it updates the associated user, device type, and marks it active.
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - userId
 *               - token
 *               - type
 *             properties:
 *               userId:
 *                 type: string
 *                 description: Unique identifier of the user owning the device
 *                 example: "user_12345"
 *               token:
 *                 type: string
 *                 description: Device token generated by the push notification service (e.g., FCM, APNS)
 *                 example: "fcm_token_abc123xyz"
 *               type:
 *                 type: string
 *                 description: Device type (e.g., "android", "ios", "web")
 *                 example: "android"
 *     responses:
 *       200:
 *         description: Device token successfully created or updated
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                   example: "Device token registered successfully"
 *       400:
 *         description: Bad request, missing or invalid parameters
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 *                   example: "Missing required fields: userId, token, type"
 *       500:
 *         description: Internal server error
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 *                   example: "Failed to save device token"
 */
